spring:
  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    open-in-view: false
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope: email,profile
          github:
            client-id: ${GITHUB_CLIENT_ID}
            client-secret: ${GITHUB_CLIENT_SECRET}
            scope: user:email,read:user
  elasticsearch:
    uris: ${SPRING_ELASTICSEARCH_URIS}
  data:
    redis:
      host: redis
      port: 6379
      password:
      database: 0
    elasticsearch:
      repositories:
        enabled: true
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${SPRING_KAFKA_EMAIL}
    password: ${SPRING_KAFKA_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  kafka:
    bootstrap-servers: ${SPRING_KAFKA_BOOTSTRAP_SERVERS:localhost:9092}

jwt:
  secret-key: ${JWT_SECRET_KEY}
  expiration: ${JWT_EXPIRATION}
  refresh-expiration: ${JWT_REFRESH_EXPIRATION}
supabase:
  url: https://wmavvzxcdwolkkqfetcl.supabase.co
  s3:
    endpoint: https://wmavvzxcdwolkkqfetcl.storage.supabase.co/storage/v1/s3
    region: eu-north-1
    access-key-id: ${SUPABASE_S3_ACCESS_KEY}
    secret-access-key: ${SUPABASE_S3_SECRET_KEY}
  bucket: resumes
app:
  oauth2:
    redirect-uri: http://localhost:8080
  frontend:
    reset-url: http://localhost:3000/reset-password
  backend:
    url:
      http://localhost:8080
stripe:
  secret-key: ${STRIPE_SECRET_KEY}
  webhook-secret: ${STRIPE_WEBHOOK_SECRET}
  premium-price-id: ${STRIPE_PREMIUM_PRICE_ID}
server:
  forward-headers-strategy: NATIVE